---
AWSTemplateFormatVersion: 2010-09-09
Description: StateMaschine for Amazon ECS RunTask

Parameters:
  env:
    Type: String
  storageRecordingStoreBucketName:
    Type: String
    Default: storageRecordingStoreBucketName
  vpcCidrBlock:
    Type: String
    Description: The CIDR range for the VPC. This should be a valid private (RFC 1918) CIDR range.

Conditions:
  ShouldNotCreateEnvResources: !Equals [ !Ref env, 'NONE' ]

Resources:

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref vpcCidrBlock
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
      - Key: Name
        Value: !Ref "AWS::StackName"

  PublicSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock:
        Fn::Select:
          - 0
          - Fn::Cidr:
              - !Ref vpcCidrBlock
              - 6
              - 8
      AvailabilityZone:
        Fn::Select:
        - '0'
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicSubnet01"

  PublicSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock:
        Fn::Select:
          - 1
          - Fn::Cidr:
              - !Ref vpcCidrBlock
              - 6
              - 8
      AvailabilityZone:
        Fn::Select:
        - '1'
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicSubnet02"

  PublicSubnet03:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      CidrBlock:
        Fn::Select:
          - 2
          - Fn::Cidr:
              - !Ref vpcCidrBlock
              - 6
              - 8
      AvailabilityZone:
        Fn::Select:
        - '2'
        - Fn::GetAZs: !Ref AWS::Region
      MapPublicIpOnLaunch: true
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-PublicSubnet03"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-igw"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
      - Key: Name
        Value: !Sub "${AWS::StackName}-public-igw"

  PublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnetRouteTableAssociation01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetRouteTableAssociation03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnet03
      RouteTableId: !Ref PublicRouteTable

  PublicSubnetNetworkAclAssociation01:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet01
      NetworkAclId: !GetAtt VPC.DefaultNetworkAcl

  PublicSubnetNetworkAclAssociation02:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet02
      NetworkAclId: !GetAtt VPC.DefaultNetworkAcl

  PublicSubnetNetworkAclAssociation03:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      SubnetId: !Ref PublicSubnet03
      NetworkAclId: !GetAtt VPC.DefaultNetworkAcl

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security Group
      VpcId: !Ref VPC
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: "-1"

  EcsCluster:
    Type: AWS::ECS::Cluster

  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy

  TaskRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: S3-PutObject-Policy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:PutObjectAcl
                Resource: !Sub 'arn:${AWS::Partition}:s3:::${storageRecordingStoreBucketName}/*'

  EcsTaskDef: 
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: broadcast
      RequiresCompatibilities: 
        - "FARGATE"
      NetworkMode: awsvpc
      Cpu: 4096
      Memory: 16384
      TaskRoleArn: !Ref TaskRole
      ExecutionRoleArn: !Ref TaskExecutionRole
      ContainerDefinitions: 
        - Name: broadcast
          Image: mats16/bcast:latest
          Cpu: 4000
          MemoryReservation: 16000
          Essential: "true"
          Environment:
            - Name: AUDIO_DELAYS
              Value: 1900
            - Name: THREAD_NUM
              Value: 4
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-region: !Ref AWS::Region
              awslogs-group: !Ref EcsLogGroup
              awslogs-stream-prefix: broadcast

  EcsLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  StateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      DefinitionString: !Sub |
        {
          "Comment": "A Hello World example of the Amazon States Language using Pass states",
          "StartAt": "Map State",
          "States": {
            "Map State": {
              "Type": "Map",
              "InputPath": "$",
              "ItemsPath": "$.dst_url",
              "MaxConcurrency": 10,
              "Parameters": {
                "src_url.$": "$.src_url",
                "dst_url.$": "$$.Map.Item.Value"
              },
              "Iterator": {
                "StartAt": "ECS RunTask",
                "States": {
                  "ECS RunTask": {
                    "Type": "Task",
                    "Resource": "arn:aws:states:::ecs:runTask.sync",
                    "TimeoutSeconds": 86400,
                    "Parameters": {
                      "LaunchType": "FARGATE",
                      "PlatformVersion": "1.3.0",
                      "Cluster": "${EcsCluster}",
                      "TaskDefinition": "${EcsTaskDef}",
                      "Group.$": "$$.Execution.Name",
                      "NetworkConfiguration": {
                        "AwsvpcConfiguration": {
                          "AssignPublicIp": "ENABLED",
                          "SecurityGroups": [
                            "${SecurityGroup}"
                          ],
                          "Subnets": [
                            "${PublicSubnet01}",
                            "${PublicSubnet02}",
                            "${PublicSubnet03}"
                          ]
                        }
                      },
                      "Overrides": {
                        "ContainerOverrides": [
                          {
                            "Name": "broadcast",
                            "Environment":[
                              {  
                                 "Name": "JOB_NAME",
                                 "Value.$": "$$.Execution.Name"
                              },
                              {  
                                 "Name": "SRC_URL",
                                 "Value.$": "$.src_url"
                              },
                              {  
                                 "Name": "DST_URL",
                                 "Value.$": "$.dst_url"
                              }
                           ]
                          }
                        ]
                      }
                    },
                    "Retry": [ {
                       "ErrorEquals": [ "States.TaskFailed" ],
                       "MaxAttempts": 5,
                       "BackoffRate": 1
                    } ],
                    "Catch": [ {
                       "ErrorEquals": [ "States.Timeout" ],
                       "Next": "ECS StopTask"
                    } ],
                    "End": true
                  },
                  "ECS StopTask": {
                     "Type": "Pass",
                     "Result": "Hello, AWS Step Functions!",
                     "End": true
                  }
                }
              },
              "ResultPath": "$.ecs.tasks",
              "OutputPath": "$",
              "End": true
            }
          }
        }
      RoleArn: !GetAtt StateMachineRole.Arn
      LoggingConfiguration:
        Level: ALL
        IncludeExecutionData: true
        Destinations: 
          - CloudWatchLogsLogGroup:
              LogGroupArn: !GetAtt StateMachineLogGroup.Arn

  StateMachineLogGroup: 
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: states.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StepFUnctions-BasePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - events:PutTargets
                  - events:PutRule
                  - events:DescribeRule
                Resource: '*'
              - Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                  - xray:GetSamplingRules
                  - xray:GetSamplingTargets
                Resource: '*'
              - Effect: Allow
                Action:
                  - logs:CreateLogDelivery
                  - logs:GetLogDelivery
                  - logs:UpdateLogDelivery
                  - logs:DeleteLogDelivery
                  - logs:ListLogDeliveries
                  - logs:PutResourcePolicy
                  - logs:DescribeResourcePolicies
                  - logs:DescribeLogGroups
                Resource: '*'
        - PolicyName: ECS-RunTask-AccessPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: ecs:RunTask
                Resource: !Ref EcsTaskDef
              - Effect: Allow
                Action:
                  - ecs:DescribeTasks
                  - ecs:StopTask
                Resource: '*'
              - Effect: Allow
                Action: iam:PassRole
                Resource:
                  - !GetAtt TaskExecutionRole.Arn
                  - !GetAtt TaskRole.Arn

Outputs:
  Arn:
    Description: 'State Machine ARN'
    Value: !Ref StateMachine
  
  Name:
    Description: 'State Machine Name'
    Value: !GetAtt StateMachine.Name
