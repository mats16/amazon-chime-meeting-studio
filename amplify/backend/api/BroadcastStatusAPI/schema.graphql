type Status @model
  @auth(rules: [
    { allow: owner, ownerField: "owner", provider: userPools, identityClaim: "email", operations: [create, read, update] }
    { allow: private, provider: iam }
  ])
{
  id: ID!
  status: String
  owner: String
  description: String
  src_url: String
  recordingEnabled: Boolean
  recordingFileUri: AWSURL
  transcriptionEnabled: Boolean
  transcriptionMaxSpeakerLabels: Int
  transcriptionStatus: String
  transcriptionMediaFileUri: AWSURL
  transcriptFileUri: AWSURL
  broadcastEnabled: Boolean
  broadcastRtmpUri: String
}

type AccountSettings @model
  @auth(rules: [ { allow: owner, ownerField: "id", provider: userPools, operations: [create, read, update, delete] } ])
{
  id: ID!
  twitch_stream_key: String
  youtube_stream_key: String
}

type VocabularySheet @model
  @auth(rules: [ { allow: private, provider: userPools } ])
  @key(fields: [ "vocabularyId", "row" ])
{
  vocabularyId: ID!
  row: Int!
  phrase: String!
  ipa: String
  soundsLike: String
  displayAs: String
}

type Vocabulary @model
  @auth(rules: [ { allow: private, provider: userPools } ])
{
  id: ID!
  name: String!
}
